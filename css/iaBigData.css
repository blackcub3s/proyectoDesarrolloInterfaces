/*----página interna-----*/
/*----iaBigData.css-----*/
/*----------------------*/

/*contenedor de la presentacion IA + logo python*/
#PI_contenedorCabezalIA > section:first-child {
    height: 20em;
    background: linear-gradient(to bottom, 
                                var(--colorBarraNavegacion), 
                                var(--PI_grisIA_gradiente)
                                );
    display: grid;
    grid-template-columns: 1fr;
    justify-items: center;
    color: white;
    padding-top: 11.5em;
}

/*l'h1 de la seccion inicial de la 
subpagina IA bigdata*/

/*definimos animación con animate.css i un hover atractvo a l'h1 de "IA & BigData" que se ve nada más acceder a la página*/
#PI_contenedorCabezalIA h1 {
    animation: fadeIn; 
    animation-duration: 2s;

    font-size: 4em;
    text-shadow: 0px 6px 2px rgba(255, 255, 0, 0.25); /*es el box shadow, pero del texto :). Tomamos el color original de figma, pasado a RGB y añadiendo la opacidad del 25%*/

    transition: ease-in-out transform var(--tiempoTransicionEstandar), 
                ease-in-out text-shadow var(--tiempoTransicionEstandar);
}
#PI_contenedorCabezalIA h1:hover {transform: scale(1.02); text-shadow: 0px 9px 2px rgba(255, 255, 0, 0.25);}



/*la imagen de python (abrir con vscode, solo se ve bien
con protocolo http, no con protocolo file)*/
#PI_contenedorCabezalIA > section:first-child img {width: 13em; padding-top: 5em;}

/*clase para subtitulos de IAbigData (usada dos veces)*/
.subTitulosIA {
    font-size: 1.8em;
    color: white;
    border-top: 1px solid white;
    border-bottom: 1px solid white;
    padding: .5em 0; /*paddingp or arriba y por abajo con la shorthand*/
    text-align: center;
    position: relative;
    top: 8em; /*bajajmos el h1 un poco para que este igual que en figma sin mover nada del contenedor padre*/
    text-shadow: 0px 4px 1px rgba(0, 0, 0, 0.25); /*es el box shadow, pero del texto :). Tomamos el color original de figma, pasado a RGB y añadiendo la opacidad del 25%*/
}

#PI_contenedorTituloLibDESARROLLO > section:first-child {
    height: 37.844em;
    background-color: red;
    background: linear-gradient(to bottom, 
                    var(--PI_grisIA_gradiente), 
                    var(--PI_amarilloIA_gradiente)
                    );
}


/*estilos para los pares imagen y texto de cada libreria*/
.dosColumnasIA {
    display: grid;
    grid-template-columns: 1fr 1fr;
    max-width: 900px;
    margin: 0 auto;
    text-align: center;
    font-size: 1.7em; /*tamaño de las letras*/
}

/*comandos ESPECÍFICOS para imagenes que estén dentro 
   de una celda de GRID*/
.dosColumnasIA img {
    justify-self: center; /* centro imagen horizontalmente en la celda grid */
    align-self: center; /* centro imagen VERTICALMENTE en la celda grid */
}


#PI_pares_LibreriaImagen {
    position: relative; /*MUY IMPORTANTE*/
    top: -15em;         /*DESPLAZAMOS HACIA ARRIBA EL TEXTO E IMAGENES -PERO EL FONDO LO DEJAMOS DONDE ESTABA-*/
}


#PI_pares_LibreriaImagen article p span {color: red;} /*emfatizamos partes del codigo*/
#PI_pares_LibreriaImagen article p {padding: 1.5em; color: white;}
#PI_pares_LibreriaImagen article:first-child img {width: 12em;} /*anchura imagen pyspark*/
#PI_pares_LibreriaImagen article:nth-child(2) img {width: 7em;} /*amchura imagen openai*/
#PI_pares_LibreriaImagen article:nth-child(3) img {width: 5.5em;} /*anchura imagen openCV*/
#PI_pares_LibreriaImagen article:nth-child(4) img {width: 9em;} /*anchura imagen sklearn*/
#PI_pares_LibreriaImagen article:nth-child(5) img {width: 13em;} /*anchura imagen tensorflow*/


#PI_soloFondoParLibImg {
    /*background-color: green;*/
   background: linear-gradient(to bottom, 
        var(--PI_amarilloIA_gradiente), 
        var(--PI_amarilloIA_BRILLANTE_gradiente)
    );

    height: 68em;
}







/*ponemos el background al bloque que enlaza la parte de librerias machine learning
con la parte de datos. donde esta el titulo de datos (librerias de manipulación [...] de datos*/
#PI_contenedorLibDatos section:first-child {
    height: 28.5em; /*TO DO*/
    /*background-color: green;  /*TO DO*/
    background: linear-gradient(to bottom, 
        var(--PI_amarilloIA_BRILLANTE_gradiente), 
        var(--PI_rojoDatos_SUAVE_gradiente)
    );

    padding-top: 18em; /*conseguimos el efecto de estirar el h1 hacia abajo para cuadrarlo con el figma*/
}


#PI_pares_datosImagen {
    background-color: var(--PI_rojoDatos_SUAVE_gradiente);
}
#PI_pares_datosImagen > section:first-child {
    position: relative;
    top: -3em;
}

#PI_pares_datosImagen article p span {color: #00BBFF;} /*emfatizamos partes del codigo*/
#PI_pares_datosImagen article p {padding: 1.5em; color: white;}
#PI_pares_datosImagen article:first-child img {width: 12em;} /*anchura imagen pandas*/
#PI_pares_datosImagen article:nth-child(2) img {width: 16em;} /*anchura imagen plotly*/
#PI_pares_datosImagen article:nth-child(3) img {width: 13em;} /*anchura imagen seaborn*/

#PI_pares_LibreriaImagen article {
    padding-bottom: 0em;
}

#PI_pares_datosImagen article {
    padding-bottom: 0em;
}


#PI_pares_datosImagen article:first-child p {width: 12em;} /*texto asociado a pandas lo hacemos más compacto para cuadrad con figma*/
#PI_pares_datosImagen article:nth-child(2) p {width: 12.5em;} /*texto asociado a plotly lo hacemos más compacto para cuadrar con figma*/
#PI_pares_datosImagen article:last-child p {width: 12.5em;} /*texto asociado a seaborn lo hacemos más compacto para cuadrar con figma*/




#PI_transicionIaBigData_a_footer {
    
    height: 40em;

    background: linear-gradient(to bottom, 
                                var(--PI_rojoDatos_SUAVE_gradiente), 
                                var(--PI_rojoDatos_OSCURO_gradiente), 
                                var(--PI_rojoDatos_MUYOSCURO_gradiente), 
                                var(--negroFooter));

}




/*PONEMOS DROP SHADOW N CADA IMAGEN DE DATOS Y DE LIBRERIA DE MACHINE LEARNING
(añadimos también un hover, para conseguir que la sombra cambie y no sea estática (y que la escala también cambie). 
Con el hover, no solamente movemos la sombra y aumentaremos el tamaño de cada imagen, sino que tambié conseguirmos que
tenga menos blur, permitiendo al usuario ver la sombra más enfocada cuando justamente pasa el ratón por encima)*/
#PI_pares_LibreriaImagen img, #PI_pares_datosImagen img {
    filter: drop-shadow(0px 10px 3px rgba(0, 0, 0, 0.25)); 
    transition: filter var(--tiempoTransicionEstandar) ease-in-out,
                transform var(--tiempoTransicionEstandar) ease-in-out;
}

#PI_pares_LibreriaImagen img:hover, #PI_pares_datosImagen img:hover {
    filter: drop-shadow(0px 15px 1px rgba(0, 0, 0, 0.25));
    transform: scale(1.02);
}

/*drop shadow al logo grande de python y animación con hover de la transformación (logo sale a fuera) y a la vez
de la sombra para hacelro más realista. No hemos podido simular el drop shadow de colores mixtos que conseguimos
con figma (donde es fácil afectar a distintos componentes del svg por separado). Así que
en este caso hemos optado por, simplemente, poner un drop-shadow simple.*/
#PI_contenedorCabezalIA img {
    filter: drop-shadow(0px 10px 1px rgba(0, 0, 0, 0.25));
    transition: filter var(--tiempoTransicionEstandar) ease-in-out, 
                transform var(--tiempoTransicionEstandar) ease-in-out;
}
#PI_contenedorCabezalIA img:hover {filter: drop-shadow(0px 15px 1px rgba(0, 0, 0, 0.25)); transform: scale(1.02);}



#PI_contenedorCabezalIA img {
    animation: fadeInUp; 
    animation-duration: 1.2s;
}