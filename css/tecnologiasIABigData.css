/*contendrá solo fondo con gradiente de 
transició de sección back-end a IA*/
#IA-bigData > div:first-child {
    background: linear-gradient(to bottom, var(--negroGradiente), var(--doradoGradiente)); /* Primer gradiente */
    height: 813px; /*no usamos ems porque es mas simple copiar la altura de figma en este caso*/
} 

/*solo fondo con gradiente*/
#IA-bigData > div:nth-child(2) {
    background: linear-gradient(to bottom, var(--doradoGradiente), var(--blancoAmarillento)); /* Primer gradiente */
    height: 421px;
} 

/*solo fondo con gradiente*/
#IA-bigData > div:nth-child(3) {
    background-color: var(--blancoAmarillento); 
    height: 1145px;
} 

/*solo fondo con gradiente*/
#IA-bigData > div:nth-child(4) {
    background: linear-gradient(to bottom, var(--blancoAmarillento), var(--doradoGradiente)); /* Primer gradiente */
    height: 421px;
} 

/*solo fondo con gradiente*/
#IA-bigData > div:nth-child(5) {
    background: linear-gradient(to bottom, var(--doradoGradiente), var(--negroGradiente)); /* Primer gradiente */
    height: 497px;
} 

/*texto e imágenes de las sección iaBigData
que se superpondrán a fondos anteriores*/
#IA-bigData > div:nth-child(6) {
    position: relative; /*posiciono relativo al final del div superior (el quinto hijo). Indispoensable para que el pposicionamiento absoluto de los iconos de ia (imagenes hijas) tengan la referencia del relativo.*/
    margin: 0 auto; /*centramos*/
    color: black;
    bottom: 144em; /*contando desde abajo subo para posicionar el texto justo en el punto deseado para que quede como en figma*/
    max-width: var(--MaximaAnchuraTextosEncabezados);
    height: 0; /*altura en cero para que no quede recuadro blanco vestigial, al mover todo el bloque arriba*/
    z-index: 1;
}




/* Posicionamiento individual de cada logo */

/* Logo central (Python) */
#pythonLanding {
    position: absolute; /*posicion absoluto en relacion al contenedor relativo dentro de donde esta (esta dentro del #IA-bigData > div:nth-child(6))*/
    transform: translate(calc(var(--X) - 1em), calc(var(--Y) - 4em));
    width: 20em; 
    filter: drop-shadow(7px 6px 2px rgba(0, 0, 0, 0.25)); /*Aqui no nos sirve box-shadow, debemos usar la propiedad filter*/
}

/* TensorFlow */
#tensorflowLanding {
    position: absolute;
    width: 15em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 0em), calc(var(--Y) + 23em)); /*definimos translación ajustando el centro a coordenadas --X e --Y (que es el centro de python, que definimos como el 0,0)*/
}

/* Scikit-Learn */
#sklearnLanding {
    position: absolute;
    width: 15em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 1em), calc(var(--Y) - 23em));
}

/* Seaborn */
#seabornLanding {
    position: absolute;
    width: 16em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 0em), calc(var(--Y) + 0em));
}

/* PySpark */
#pysparkLanding {
    position: absolute;
    width: 16em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 30em), calc(var(--Y) + 0em));
}

/* Plotly */
#plotlyLanding {
    position: absolute;
    width: 16em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 0em), calc(var(--Y) + 0em));
}

/* Pandas */
#pandasLanding {
    position: absolute;
    width: 16em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 0em), calc(var(--Y) + 0em));
}

/* OpenCV */
#opencvLanding {
    position: absolute;
    width: 16em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) - 20em), calc(var(--Y) + 4.5em));
}

/* OpenAI */
#openaiLanding {
    position: absolute;
    width: 12em; /* Ajusta el tamaño según sea necesario */
    transform: translate(calc(var(--X) + 0em), calc(var(--Y) + 0em));
}