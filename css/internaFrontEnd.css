
/*################################################*/
/*------------------------------------------------*/
/*---------PÁGINA INTERNA: FRONTEND.html----------*/
/*------------------------------------------------*/
/*################################################*/


.PItituloFront {font-size: 2.1rem; margin-top: 1rem;}     
.PIsubTituloFront {font-size: 1.7rem;} 

/*######################################
  # SECCIÓN 1 PÁGINA INTERNA FRONTEND: # 
  #       presentación front end       #
  ######################################*/
  
/*Altura del contenedor con doble gradiente
 negro a azul claro*/
#PIpresentacionFrontEnd > div:first-child {
    background: linear-gradient(to bottom, var(--colorBarraNavegacion) 0%, var(--PI_colorMedioGradienteAZULOSCUROFrontEnd) 50%, var(--PI_colorMedioGradienteAZULCLAROFrontEnd) 100%);
    height: 27.5em;
    color: white;
    text-align: center;
}

/*título de la presentación*/
#PIpresentacionFrontEnd > div:first-child h1 {
    position: relative;
    top: 40%;
    font-size: 2.7em;
    animation: fadeIn;  /*ponemos un fundido de entrada al título de la página*/
    animation-duration: 2s;
}

/*línea roja*/
#PIpresentacionFrontEnd > div:nth-child(2) {
    height: .9em;
    background: red;
}

/*###########################################
  # SECCIÓN 2 PÁGINA INTERNA (PI) FRONTEND: # 
  #       caracteristicas de los            #
  #        frameworks (título,              #
  #        subtítulo y 3 cards)             #
  ###########################################*/



/*DEFINIMOS UN ANCHO MÁXIMO PARA ESTA PARTE*/
#PIcaracteristicasFrameworksFront {
    width: 100%;
    max-width: var(--MaximaAnchuraCardsPIfrontend);
    margin: 0 auto; /*Centramos todo este contenedor horizontalmente (cards y titulo y subtítulo que las antecede)*/
}

/*POSICIONO TÍTULO "¿En Qué desarrollamos y por qué?"*/
#PIcaracteristicasFrameworksFront > div > h1 {
    padding-top: 2.5em;
    padding-left: 1em;
}

/*POSICIONO SUBTÍTULO "desarrollamos el cliente en vue, 
angular y react. [...] las siguentes ventajas:"*/
#PIcaracteristicasFrameworksFront > div > p {
    padding-left: 5.3em;
    padding-right: 5em;
    padding-top: 1.5em;
}



/*DEFINO UN GRID DE TRES COLUMNAS y los estilos 
para el CONTENEDOR DE LAS CARDS DE CARACTERÍSTICAS DE LOS 
FRAMEWORKS (página interna de frontend)*/
#PIcaracteristicasFrameworksFront div:last-child {
    padding-top: 3.5em;
    max-width: var(--MaximaAnchuraCardsPIfrontend);
    display: grid;
    grid-template-columns: repeat(3, 1fr); /*defino las 3 columnas con grid*/
    text-align: center;         /*MANTENGO EL TEXTO CENTRADO DENTRO DE CADA CARD*/
    justify-items: center;       /* CENTRO LAS 3 CARDS HORIZONTALMENTE*/
}

/*definimos  el estilo de CADA CARD de características 
de la página interna FrontEnd mediante la clase .cartaFrontEndPI*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI {
    width: 300px; /* Hemos optado para definir las cards con ancho fijo por más control */
    aspect-ratio: 1/1.618; /* Proporción aurea --> 1:618 (ancho:alto) */
    border-radius: 1em;
    padding: .2em 1.9em 1em 1.9em; /*damos espacio entre borde card y su contenido. Con esto tambien empequeñecemos anchura del text e imagenes*/
    box-sizing: border-box; /* Para asegurarse de que el padding no afecte el tamaño */
    box-shadow: 0px 5px 4px rgba(143, 141, 141, 0.3); 
    background: linear-gradient(to bottom, var(--g), var(--r)); /* GRADIENTE YA ESTA HECHO BIEN, NO TOCAR */
    transition: box-shadow var(--tiempoTransicionEstandar) ease-in-out; /*para el hover de cada carta*/
}

/*DEFINO ESTILOS PARA LOS 
TEXTOS DE LAS CARDS (USAMOS H1 Y H2):*/
#PIcaracteristicasFrameworksFront div:last-child article h1 {margin-top: .5em;}
#PIcaracteristicasFrameworksFront div:last-child article h2 {font-size: 1.3em; text-align: left;}

/*DEFINO ESTILOS PARA LAS IMÁGENES DE LAS CARDS (elemento img):
  -- IMAGEN (ESCALERA) ----- PRIMERA CARD de características*/
#PIcaracteristicasFrameworksFront div:last-child article:first-child > img {width: 80%; padding-top: .6em; padding-bottom: 1.5em;}
/*-- IMAGEN (RAYO) --------- SEGUNDA CARD de características*/
#PIcaracteristicasFrameworksFront div:last-child article:nth-child(2) > img {width: 40%; padding-top: .6em;}
/*-- IMAGEN (COMUNIDAD) ---- TERCERA CARD de características*/
#PIcaracteristicasFrameworksFront div:last-child article:last-child > img {width: 75%; padding-top: 2em; padding-bottom: 2.4em;}


/*COLOR ROJO PARA LOS SPANS DE LAS CARDS*/
#PIcaracteristicasFrameworksFront .roig {color: red;}



/*DEFINIMOS HOVERS PARA LAAS IMAGENES DE LAS CARDS DE CARACTERÍSTICAS FRONTEND*/
/*PARA LOS HOVER DE LAS IMÁGENES DE LAS CARTAS DE FRONTEND (DEFINIDAS IGUAL QUE LAS 
CARDS DEL FRONT-END DE LA LANDING PAGE)*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI img {transition: transform var(--tiempoTransicionEstandar) ease-in-out; /*para el hover*/}
#PIcaracteristicasFrameworksFront .cartaFrontEndPI img:hover {transform: scale(var(--aumentoTamanyoEstandar));} /*hover de imagen vue, aumenta de tamaño al pasar por encima*/



/*ANIMACIONES PARA LAS CARDS [A (hover) i B (animateStyle)]*/

/*-----------------------------------------------------*/
/*A: Animamos el box-shadow y el background con hover:-*/
/*-----------------------------------------------------*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI {
    transition: box-shadow var(--tiempoTransicionEstandar) ease-in-out;
    /*NOTA: ojo que el background NO se puede animar con transition (el background-color sí, 
    pero en este caso queremos cambiar de un gradiente lineal a otro gradiente
    lineal, y no nos sirve usar la propiedad background-color)*/    
}

#PIcaracteristicasFrameworksFront .cartaFrontEndPI:hover {
    box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.4);
    background: linear-gradient(to bottom, var(--gHover), var(--rHover)); /*NO se puede definir transition ease-in-out para esta propiedad*/
}


/*-----------------------------------------------------*/
/*B: Animamos la entrada de las 
     cards con animate style (propiedad fadeInUp)
/*-----------------------------------------------------*/

/*NO SE HA PODIDO CARGAR CON WOW JS ASÍ QUE LAS ANIMACIONES NO TIENEN UN TRIGGER POR SCROLL. SE HA TRATADO
DE CONSEGUIR QUE MÁS O MENOS HAGAN TRIGGER CUANDO EL USUARIO VAYA A BAJAR (DEJANDO CASI 2 SEGUNDO PARA ELLO)*/

/*[B]: animo primera card*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI:first-child {
    animation: fadeInLeft; 
    animation-duration: 1.6s;
}

/*[B]: animo segunda card*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI:nth-child(2) {
    animation: fadeInUp; 
    animation-duration: 1.6s;
}

/*[B]: animo tercera card*/
#PIcaracteristicasFrameworksFront .cartaFrontEndPI:last-child {
    animation: fadeInRight; 
    animation-duration: 1.6s;
}





/*#################################################
    SECCIÓN 3 PÁGINA INTERNA (PI) FRONTEND:   
          diferencias entre los  3 frameworks 
          de frontend:
                3A: título.
                3B: galeria swiper 3 frameworks
  #################################################*/



/**************************/
/* 3A: Titulo (¿En qué 
   desarrollamos y por qué?)
/**************************/
#PIdiferenciasFrameworksFront > h1 {
    text-align: center;
    padding-top: 2.6em;
    animation: fadeIn;  /*ponemos un fundido de entrada al título*/
    animation-duration: 3d;
}




/*******************/
/*3B) Galería swiper*/
/*******************/


/*ponemos un extra de altura al contenedor de diferencias para que
el contenedor de swiper no se solape con el contenedor superior */
#PIdiferenciasFrameworksFront {
    padding-top: 1em;
}

/*definimos anchura y altura del contenedor de swiper*/
#PIdiferenciasFrameworksFront .swiper {
    width: 70%; /*anchura del contenedor swiper (ojo con los botones)*/
    height: 40em; /*Altura contenedor swiper*/
    max-width: var(--MaximaAnchuraCardsPIfrontend);
}
#PIdiferenciasFrameworksFront .swiper-slide {
    display: flex;
    justify-content: center;
    align-items: center; /*centro verticalemnte*/
    font-size: 18px;
    background: #fff; /* Background color for slides */
}

/*Definimos stiling de cada imagen que muestrara un component de codi
de vue, react o angular.*/
#PIdiferenciasFrameworksFront .swiper-slide article:last-child img {
    width: 400px;
    border-radius: .4em;
    margin-right: 1em;
}

/*Ponemos un padding para separar la imagen del logo de la tecnología
front end con la imagen del componente de esta tecnología*/
#PIdiferenciasFrameworksFront .swiper-slide article:last-child {
    padding-left: 5em;
}

/*Definimos la anchura de cada logo del slider (vue, react o angular).*/
#PIdiferenciasFrameworksFront .swiper-slide article:first-child img {
    width: 250px;
}

/*Definimos la posicion del título h1 que hay encima de 
de cada logo del slider (vue, react o angular).*/
#PIdiferenciasFrameworksFront .swiper-slide article:first-child h1 {
    text-align: center;
    padding-bottom: 1em;
}


/*#################################################
    SECCIÓN 4 (S4) PI4cards FRONT END (Página Interna -PI-): 
        A) Fondos Variables
        B) Diseño de las 4 cards

  #################################################*/



/***********************************/
/** 4A) Fondos variables          **/
/***********************************/
#PI4cards {
    transform: rotate(-10deg);/* Rotación antihoraria */

    /*hacemos más ancho el contenedor torcido 
    para esconder los espacios en blanco que se generan
    por la derecha con la rotación de 10 grados*/
    width: 200%;  
    position: relative;
    right: 4em; /*movemos a la izquierda 
    el contenedor para esconder también espacios
     blancos por la izquierda*/
}

#PI4cards #vue4cards {background-color: var(--colorVerdeVue);  height: 15em;}
#PI4cards #angular4cards {background-color: pink;  height: 15em; display: none;}
#PI4cards #react4cards {background-color: blue;  height: 15em; display: none;}

/***********************************/
/** 4A)Diseño de las 4 cards **/
/***********************************/

/*Antes que todo nos aseguramos que el contenedor de las cards
y el contenedor de swiper están apilados uno encima del otro (z-index
mayor se muestra por encima. Debemos definir mismo contexto de apilamiento
asi que usamos position relative.*/
#PI4cards, #PIdiferenciasFrameworksFront {position: relative; overflow: hidden;}
#PIdiferenciasFrameworksFront {z-index: 1;}
#PI4cards {z-index: 3;}

